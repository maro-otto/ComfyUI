// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/debian
{
    "name": "Python 3",
    "build": {
        "dockerfile": "Dockerfile",
        "context": "..",
        "args": {
            // "VARIANT": "3.9"
        }
    },
    // We need to run in priviliged mode to make gcsfuse work, and expose all gpus for cuda
    // --gpus all requires an attached gpu as docker run otherwise fails
    "runArgs": ["--privileged", "--gpus", "all"],
    "settings": {
        //"python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",
        "java.import.gradle.java.home": "/usr/local/sdkman/candidates/java/current",
        "python.terminal.activateEnvironment": true,
        "python.terminal.activateEnvInCurrentTerminal": true,
        //"python.linting.vulturePath": "${workspaceFolder}/.venv/bin/vulture",
        "[python]": {
            "editor.defaultFormatter": "ms-python.black-formatter",
            "editor.formatOnSave": true
        },
        "black-formatter.args": [
            "--preview",
            "--line-length=120"
        ],
        //"pylint.interpreter": [
        //    "${workspaceFolder}/.venv/bin/python"
        //],
        "pylint.args": [
            "--extension-pkg-whitelist=cv2,tensorflow,pydantic",
            "--disable=missing-function-docstring,missing-class-docstring,missing-module-docstring,logging-fstring-interpolation",
            "--generated-members=cv2.*,google.cloud.*,torch.*,tensorflow.*",
            "--signature-mutators=dali_ds.utils.decorators.time_it,dali_ds.utils.decorators.doublewrap",
            "--max-line-length=120",
            "--good-names=i,j,k,ex,Run,_,df,x,y,w,h"
        ],
        //"flake8.interpreter": [
        //    "${workspaceFolder}/.venv/bin/python"
        //],
        "flake8.args": [
            "--max-line-length=120"
        ],
        "files.watcherExclude": {
            "**/cache/**": true,
            "**/generated/**": true
        },
        "editor.inlineSuggest.enabled": true,
        "files.autoSave": "afterDelay",
        "files.insertFinalNewline": true,
        "sonarlint.analyzerProperties": {
            "sonar.exclusions": "**/miniconda/base/envs/**/*.py"
        },
        "sonarlint.trace.server": "off",
        "sonarlint.disableTelemetry": true,
        "errorLens.messageBackgroundMode": "message",
        "errorLens.light": {},
        "jupyter.notebookFileRoot": "${workspaceFolder}"
    },
    "postCreateCommand": "bash ./.devcontainer/post-install.sh",
    // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
    // Might have side effects on docker for MacOS for bind mounts
    // "remoteUser": "vscode",
    "features": {
        "ghcr.io/devcontainers/features/docker-in-docker:2": {},
        "ghcr.io/devcontainers/features/java:1": {},
        "ghcr.io/devcontainers-contrib/features/tfswitch:1": {},
        "ghcr.io/iterative/features/nvtop:1": {},
        "ghcr.io/devcontainers/features/nvidia-cuda:1": {
            "installCudnn": true,
            "installToolkit": true,
            "installNvtx": true
        },
        "ghcr.io/dhoeric/features/google-cloud-cli:1": {
            "version": "latest"
        }
    },
    "extensions": [
        "adpyke.vscode-sql-formatter",
        "AlexSweet.vulture-vscode",
        "charliermarsh.ruff",
        "donjayamanne.githistory",
        "donjayamanne.python-environment-manager",
        "donjayamanne.python-extension-pack",
        "eamodio.gitlens",
        "GitHub.vscode-pull-request-github",
        "googlecloudtools.cloudcode",
        "johnguo.simply-view-image-for-python-opencv-debugging",
        "mhutchie.git-graph",
        "mikoz.autoflake-extension",
        "ms-azuretools.vscode-docker",
        "ms-python.autopep8",
        "ms-python.black-formatter",
        "ms-python.flake8",
        "ms-python.isort",
        "ms-python.mypy-type-checker",
        "ms-python.pylint",
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-keymap",
        "ms-toolsai.jupyter-renderers",
        "ms-toolsai.vscode-jupyter-cell-tags",
        "ms-toolsai.vscode-jupyter-slideshow",
        "ms-vscode-remote.remote-containers",
        "ms-vscode-remote.remote-ssh",
        "ms-vscode-remote.remote-ssh-edit",
        "ms-vscode-remote.remote-wsl",
        "ms-vscode-remote.vscode-remote-extensionpack",
        "ms-vscode.makefile-tools",
        "ms-vscode.remote-explorer",
        "RandomFractalsInc.vscode-data-preview",
        "ryuta46.multi-command",
        "SonarSource.sonarlint-vscode",
        "TrungNgo.autoflake",
        "usernamehw.errorlens",
        "VisualStudioExptTeam.intellicode-api-usage-examples",
        "VisualStudioExptTeam.vscodeintellicode",
        "vivaxy.vscode-conventional-commits"
    ],
    "mounts": [
        // Mount local gcloud to prevent calling gcloud again for every docker
        "source=${localEnv:HOME}/.config/gcloud,target=/home/vscode/.config/gcloud,type=bind,consistency=cached",
        // Mount local ssh settings
        "source=${localEnv:HOME}/.ssh,target=/home/vscode/.ssh,type=bind,consistency=cached"
    ]
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],
    // Configure tool-specific properties.
    // "customizations": {},
    // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
    // "remoteUser": "root"
}
